name: Python package

env:
  COLUMNS: 120

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
    branches:
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
      - name: Set ENV var
        run: |
          echo "ENV=ci" >> "$GITHUB_ENV"

      - name: Creating CAPEv2 log folders
        run: |
          sudo mkdir -p /var/log/capybox/django /var/log/capybox/web /var/log/capybox/rooter /var/log/capybox/processor \
            && sudo chmod -R 777 /var/log/capybox/django /var/log/capybox/web /var/log/capybox/rooter /var/log/capybox/processor

      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Checkout test files repo
        uses: actions/checkout@v3
        with:
          repository: CAPESandbox/CAPE-TestFiles
          path: tests/data/

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install and cache dependencies
        uses: Eeems-Org/apt-cache-action@v1.1
        with:
          packages: |
                    libxml2-dev libxslt-dev python3-dev libgeoip-dev ssdeep libfuzzy-dev p7zip-full innoextract unrar \
                    upx libsasl2-dev libssl-dev libldap2-dev ldap-utils tox lcov valgrind libvirt-daemon-system \
                    libvirt-clients bridge-utils libvirt-dev

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          # installation-arguments: --git https://github.com/python-poetry/poetry.git@fedff6da43f33a350598ec0ea85b5dca30178a03 # 1.5.1
          version: latest
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Run ensure pytest installed
        run: poetry run pip install pytest=="7.2.0"

      - name: Run unit tests
        run: poetry run python -m pytest --import-mode=append

      - name: Run parsers unit tests
        run: poetry run python -m pytest tests_parsers -s --import-mode=append

      - name: Install dependencies
        run: poetry run pip install ruff
      - name: Run Ruff
        run: poetry run ruff . --line-length 132 --ignore E501,E402
